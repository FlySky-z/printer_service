name: Create Release

on:
  push:
    tags:
      - 'v*' # 仅在推送符合 v* 格式的标签时触发

jobs:
  release:
    name: Publish Release
    runs-on: windows-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Node.js 环境并编译前端
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      # 设置 Go 环境并编译后端
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'

      - name: Build backend
        working-directory: ./
        run: |
          go build -o printer.exe

      # 规范化产物名称
      - name: Rename executable with version and architecture
        run: |
          $version = "${{ github.ref_name }}"
          $arch = "windows-amd64"
          Rename-Item -Path "printer.exe" -NewName "printer-$version-$arch.exe"

      # 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This is an automated release.
            - Tag: ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 上传构建产物到 Release
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASECD }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./printer-${{ github.ref_name }}-windows-amd64.exe
          asset_name: printer-${{ github.ref_name }}-windows-amd64.exe
          asset_content_type: application/octet-stream